user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    upstream web {
        server web:3000; # Railsアプリケーションのコンテナ名とポート番号
    }

    server {
        listen 80;
        server_name yourdomain.com; # ドメイン名を設定

        return 301 https://$host$request_uri; # HTTPからHTTPSへリダイレクト
    }

    server {
        listen 443 ssl http2;
        server_name yourdomain.com; # ドメイン名を設定

        ssl_certificate /etc/nginx/ssl/yourdomain.crt; # 証明書のパス
        ssl_certificate_key /etc/nginx/ssl/yourdomain.key; # 秘密鍵のパス

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://web; # Railsアプリケーションへリバースプロキシ
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 必要に応じて他のlocationブロックを追加
    }
}